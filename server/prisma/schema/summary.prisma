model BetSummary {
  id          String   @id @default(cuid())
  siteId      String   @map("site_id")
  site        Site     @relation(fields: [siteId], references: [id])
  totalBets   Int      @map("total_bets")
  totalAmount Float    @map("total_amount")
  date        DateTime @db.Date
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([siteId, date])
  @@index([siteId])
  @@index([date])
}

model TopPerformerSummary {
  id     String @id @default(cuid())
  roleId String @map("role_id")
  role   Role   @relation(fields: [roleId], references: [id])
  siteId String @map("site_id")
  site   Site   @relation(fields: [siteId], references: [id])
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  type String @map("type")

  // Performance metrics
  settledTransactions Int      @default(0) @map("settled_transactions")
  pendingTransactions Int      @default(0) @map("pending_transactions")
  totalTransactions   Int      @default(0) @map("total_transactions")
  operatorName        String?  @map("operator_name")
  pendingCommission   Float?   @map("pending_commission")
  releasedAllTime     Float?   @map("released_all_time")
  calculationDate     DateTime @default(now()) @map("calculation_date")

  createdBy String? @default("system") @map("created_by")
  updatedBy String? @default("system") @map("updated_by")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, siteId, calculationDate], name: "userId_siteId_calculationDate")
  @@index([siteId])
  @@index([userId])
  @@index([roleId])
}

model CategorySummary {
  id               String   @id @default(cuid())
  categoryId       String   @map("category_id")
  category         Category @relation(fields: [categoryId], references: [id])
  totalBets        Int      @map("total_bets")
  totalCommissions Float    @map("total_commissions")
  date             DateTime @db.Date
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([categoryId, date])
  @@index([categoryId])
  @@index([date])
}

model AgentSummary {
  id              String   @id @default(cuid())
  agentId         String   @map("agent_id")
  agent           User     @relation(fields: [agentId], references: [id])
  totalBets       Int      @map("total_bets")
  totalCommission Float    @map("total_commission")
  date            DateTime @db.Date
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([agentId, date])
  @@index([agentId])
  @@index([date])
}

model NetworkStatistics {
  id     String @id @default(cuid())
  roleId String @map("role_id")
  role   Role   @relation(fields: [roleId], references: [id])

  approvedCount  Int @default(0) @map("approved_count")
  pendingCount   Int @default(0) @map("pending_count")
  declinedCount  Int @default(0) @map("declined_count")
  suspendedCount Int @default(0) @map("suspended_count")
  totalCount     Int @default(0) @map("total_count")

  calculationDate DateTime @default(now()) @map("calculation_date")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([roleId, calculationDate], name: "roleId_calculationDate")
  @@index([roleId])
}
