model Category {
  id                String            @id @default(cuid())
  name              String            @unique
  description       String?
  commissions       Commission[]
  categorySummaries CategorySummary[]
  categoryLogs      CategoryLog[]
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @default(now()) @updatedAt
  createdBy         String            @default("system") @map("created_by")
  updatedBy         String            @default("system") @map("updated_by")
  commissionSummaries CommissionSummary[]
}

model Role {
  id                    String                @id @default(cuid())
  name                  String                @unique // Super Admin, Operator, Platinum, Gold, Player
  description           String?
  users                 User[]
  commissions           Commission[]
  commissionSummaries   CommissionSummary[]
  topPerformerSummaries TopPerformerSummary[]
  networkStatistics     NetworkStatistics[]
  roleLogs              RoleLog[]
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @default(now())

  createdBy String @default("system") @map("created_by")
  updatedBy String @default("system") @map("updated_by")
}

model Site {
  id                    String                @id @default(cuid())
  name                  String                @unique
  url                   String?
  description           String?
  users                 UserSite[]
  commissions           Commission[]
  betSummaries          BetSummary[]
  commissionSummaries   CommissionSummary[]
  topPerformerSummaries TopPerformerSummary[]
  // networkStatistics NetworkStatistics[]
  siteLogs              SiteLog[]
  transactions          Transaction[]
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @default(now()) @updatedAt

  createdBy String @default("system") @map("created_by")
  updatedBy String @default("system") @map("updated_by")
}

model UserSite {
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @map("user_id")
  site       Site     @relation(fields: [siteId], references: [id])
  siteId     String   @map("site_id")
  assignedAt DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  createdBy String @default("system") @map("created_by")
  updatedBy String @default("system") @map("updated_by")

  @@id([userId, siteId])
  @@index([userId])
  @@index([siteId])
}

model CategoryLog {
  id          String   @id @default(cuid())
  categoryId  String   @map("category_id")
  category    Category @relation(fields: [categoryId], references: [id])
  name        String
  description String?
  createdById String   @map("created_by_id")
  createdBy   User     @relation("CategoryLogCreator", fields: [createdById], references: [id])
  updatedById String?  @map("updated_by_id")
  updatedBy   User?    @relation("CategoryLogUpdater", fields: [updatedById], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@index([categoryId])
  @@index([createdById])
  @@index([updatedById])
}

model RoleLog {
  id          String   @id @default(cuid())
  roleId      String   @map("role_id")
  role        Role     @relation(fields: [roleId], references: [id])
  name        String
  description String?
  createdById String   @map("created_by_id")
  createdBy   User     @relation("RoleLogCreator", fields: [createdById], references: [id])
  updatedById String?  @map("updated_by_id")
  updatedBy   User?    @relation("RoleLogUpdater", fields: [updatedById], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([roleId])
  @@index([createdById])
  @@index([updatedById])
}

model SiteLog {
  id          String   @id @default(cuid())
  siteId      String   @map("site_id")
  site        Site     @relation(fields: [siteId], references: [id])
  name        String
  url         String?
  description String?
  createdById String   @map("created_by_id")
  createdBy   User     @relation("SiteLogCreator", fields: [createdById], references: [id])
  updatedById String?  @map("updated_by_id")
  updatedBy   User?    @relation("SiteLogUpdater", fields: [updatedById], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([siteId])
  @@index([createdById])
  @@index([updatedById])
}
